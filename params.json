{"name":"ff","tagline":"Easily search and process files.","body":"ff\r\n==\r\n\r\nEasy find files and directories by their names.\r\n\r\nIf you need to search by file content, use [ack](https://github.com/petdance/ack2) or [pss](https://github.com/eliben/pss).\r\n\r\nBasic usage\r\n-----------\r\n\r\n    ff passwd\r\n\r\nSearch for all files and directories in current directory and below, which is match to pattern: `*passwd*`.\r\n\r\n    ff -B passwd\r\n\r\nSearch for all files and directories in current directory and below, which is match to pattern: `*passwd`.\r\n\r\n    ff -E passwd\r\n\r\nSearch for all files and directories in current directory and below, which is match to pattern: `passwd*`.\r\n\r\n    ff -EB passwd\r\n\r\nAdvanced usage\r\n--------------\r\n\r\n    ./ff.py -p pa -s /etc --shell-exec -x '[ -f \"{path}\" ] && mkdir -p /tmp{dirname}; cp -r \"{path}\" \"/tmp{path}\"'\r\n\r\nFind all files and directories in /etc that match expression: `*pa*`, and copy them (with original directories hierarchy!) to /tmp.\r\n\r\nSo powerful...\r\n\r\nMagic pattern\r\n-------------\r\n\r\nIt's form of pattern known good for Perl or AWK lovers :)\r\n\r\nIf patterns is in general form:\r\n\r\n    mode/pattern/modifier\r\n\r\n(decribed more in full usage below), then it is parsed and used in a little other manner.\r\n\r\nInstead of arguments `--regexp` or `--fuzzy`, you can pass it in `mode` part of pattern.\r\nNext there is delimiter, which usually is `/` (backslash), but there can be more characters,\r\ndescribed in Usage section.\r\n\r\nAfter that is a pattern, next delimiter again, and then modifiers (again, modifiers are described in Usage section).\r\n\r\nSome examples:\r\n\r\nSearch for all files and directories in current directory and below, which is match to pattern: `passwd`.\r\n\r\n    ff f/pwd/\r\n\r\nSearch for all files and directories in current directory and below, which name contains letters 'p', 'w', 'd', with any other characters between them.\r\n\r\n    ff g/^(chk)?passwd/\r\n\r\nSearch for all files and directories in current directory and below, which name starts from 'chkpasswd' or 'passwd'.\r\n\r\nInstallation\r\n------------\r\n\r\n`ff` should work on any platform where [Python](http://python.org) is available, it means Linux, Windows, MacOS X etc. There is no dependencies, plain Python power :) Just copy file to your PATH, for example:\r\n\r\n    curl https://raw.github.com/mysz/ff/master/ff.py > /usr/local/bin/ff\r\n\r\nor:\r\n\r\n    wget https://raw.github.com/mysz/ff/master/ff.py -O /usr/local/bin/ff\r\n\r\nVoila!\r\n\r\nUsage\r\n-----\r\n\r\n    usage: ff.py [-h] [-0] [-i] [-s SOURCE] [-p PATTERN] [-g] [-f] [-q] [-l] [-d]\r\n                [-B] [-E] [-v] [-m {all,files,dirs}] [-x COMMAND] [--prefix]\r\n                [--no-display] [--verbose-exec] [--interactive-exec]\r\n                [--shell-exec] [--vcs] [-c EXCLUDED_PATH]\r\n                [pattern] [sources [sources ...]]\r\n\r\n    Easily search and process files by names.\r\n\r\n    positional arguments:\r\n    pattern               pattern to search\r\n    sources               optional source (if missing, use current directory)\r\n\r\n    optional arguments:\r\n    -h, --help            show this help message and exit\r\n    -0, --print0          split results by binary zero instead of new line\r\n                          (useful to work with xargs)\r\n    -i, --ignorecase, --ignore-case\r\n    -s SOURCE, --source SOURCE\r\n                          optional, see: source above\r\n    -p PATTERN, --pattern PATTERN\r\n                          optional, see: pattern above\r\n    -g, --regexp          treat pattern as regular expression (uses Python\r\n                          regexp engine)\r\n    -f, --fuzzy           pattern defines only set and order of characters used\r\n                          in filename\r\n    -q, --path-search     search in full path, instead of bare name of item\r\n    -l, --regex-multiline\r\n    -d, --regex-dotall\r\n    -B, --begin           match pattern to begin of item name (ignored in regexp\r\n                          mode)\r\n    -E, --end             match pattern to end of item name (ignored in regexp\r\n                          mode)\r\n    -v, -r, --invert-match\r\n    -m {all,files,dirs}, --mode {all,files,dirs}\r\n    -x COMMAND, --exec COMMAND\r\n                          execute some command on every found item. In command,\r\n                          placeholders: {path}, {dirname}, {basename} are\r\n                          replaced with correct value\r\n    --prefix              add prefix \"d: \" (directory) or \"f: \" (file) to every\r\n                          found item\r\n    --no-display          don't display element (useful with --exec argument)\r\n    --verbose-exec        show command before execute it\r\n    --interactive-exec    ask before execute command on every item\r\n    --shell-exec          execute command from --exec argument in shell (with\r\n                          shell expansion etc)\r\n    --vcs                 do not skip VCS directories (.git, .svn etc)\r\n    -c EXCLUDED_PATH, --exclude-path EXCLUDED_PATH\r\n                          skip given paths from scanning\r\n\r\n    Pattern, provided as positional argument (not with --pattern) can be provided\r\n    in special form (called: magic pattern). It allows to more \"nerdish\"\r\n    (or \"perlish\" :) ) way to control `ff` behavior.\r\n\r\n    The general pattern for magic pattern is:\r\n    mode/pattern/modifier\r\n\r\n    where:\r\n        mode - is one of 'p' (--pattern), 'g' - (--regexp) or 'f' (--fuzzy)\r\n        / - is delimiter:\r\n            * one of: '/', '!', '@', '#', '%', '|', and then start and end\r\n                delimiter must be the same\r\n            * one of: '{', '[', '(', '<', and the end delimiter must be the\r\n                closing one (ex. '}' if start is '{')\r\n        pattern - any pattern, processed in a way specified with 'mode'\r\n        modifier - one of: 'i' (--ignore-case), 'm' (--regex-multiline),\r\n            's' (--regex_dotall), 'v' (not used currently), 'r' (--invert-match)\r\n            'q' (--path-search)\r\n\r\n    Author:\r\n        Marcin Sztolcman <marcin@urzenia.net> // http://urzenia.net\r\n\r\n    HomePage:\r\n        https://github.com/mysz/ff/\r\n\r\nContact\r\n-------\r\n\r\nIf you like or dislike this software, please do not hesitate to tell me about this me via email (marcin@urzenia.net).\r\n\r\nIf you find bug or have an idea to enhance this tool, please use GitHub's [issues](https://github.com/mysz/ff/issues).\r\n\r\nLicense\r\n-------\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 Marcin Sztolcman\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nChangeLog\r\n---------\r\n# v.04\r\n* added changelog\r\n* added fuzzy-search mode\r\n* added 'magic pattern' mode\r\n* -r argument is now an alias to -v\r\n* better handling unicode characters in paths\r\n* handling CTRL-C\r\n* added modifier: --path-search\r\n\r\n# v0.3\r\n* use argparse instead of getopt to parse options\r\n* allow to exclude path from search\r\n* improved help and documentation\r\n\r\n# v0.2\r\n* added option 'shell-exec' - allow to exec programs with shell expansion\r\n* exec: add shell variables expansion\r\n* by default, skip VCS directories\r\n* added option 'print0' - delimit entries with binary 0, as for xargs\r\n* added options 'interactive-exec' - ask before every exec\r\n* much more powerfull exec engine\r\n* added option 'no-display' - do not display results (useful with --exec)\r\n* added option 'verbose-exec' - show executed command\r\n* added option 'invert-match' - like in grep\r\n* improved help and documentation\r\n* cleanups in code\r\n\r\n# v0.1\r\n* initial version\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}